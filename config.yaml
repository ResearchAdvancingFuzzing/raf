# make sure we do a helm install stable/postgresql BEFORE any of this since
# the setup requires that we have the postgres database already running 

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-list
rules: 
- apiGroups: [""]  
  resources: ["nodes", "pods", "services", "secrets"] # what resources this Cluster Role applies to 
  verbs: ["list"] # what actions it can perform (right now just list things) 

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-list
subjects:  # who this applies to: all serviceaccounts that are default (which is basically everything)
- kind: ServiceAccount
  name: default
  namespace: default
roleRef: # what role they are getting  
  kind: ClusterRole 
  name: pods-list
  apiGroup: rbac.authorization.k8s.io

---
# What will be the Cron Job 
apiVersion: apps/v1 # version of the api to use (group/version)
kind: Deployment
metadata: # data that helps uniquely identify the object
  name: fuzzing-manager # must be unique within the namespace
  labels: # used to organize&categorize; match selectors of controllers/services
    app: fuzzing-manager
spec: # specification of the desired behavior of the Deployment
  selector: # label selector for the pods 
    matchLabels:
      app: fuzzing-manager 
      #replicas: 1 # number of desired pods; # of desired fuzzers we want to start?
  template: # describes the pods that will be created 
    metadata:
      labels:
        app: fuzzing-manager
    spec: 
      containers:
        - name: fuzzing-manager
          image: hpreslier/fuzzing-manager:v1
          imagePullPolicy: Always # container image will be pulled every time the pod is started
          ports: 
                - containerPort: 80 # states the port number to expose on the pod's IP address; provides info about the network connections a container uses

# THis just needs to be a plain job to setup a database with the database tables using sqlalchemy 
# I feel like database should be in here for now
# We also want this to happen before the fuzzing-manager  
---
kind: Deployment
apiVersion: apps/v1
metadata: 
  name: setup-db
  labels:
    app: setup-db
spec:
  selector: 
    matchLabels: 
      app: setup-db
  template:
    metadata:
      labels:
        app: setup-db
    spec: 
      containers:
        - name: setup-db
          image: hpreslier/setup-db:v1
          imagePullPolicy: Always
 
