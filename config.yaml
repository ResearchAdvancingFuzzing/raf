# What do I actually need to create in this yaml file?
# We need a deployment specification for panda and the fuzzer 
# We definitely need a specification for the fuzzing manager 
# the database and its parts and the file system and its parts 


# NOTE: .spec.selector must match .spec.template.metadata.labels
# NOTE: you need to create docker images and push them to a registry 
# before referring to them in an image tag; use Docker CLI


# FUZZER
apiVersion: v1 # version of the api to use (group/version)
kind: Deployment
metadata: # data that helps uniquely identify the object
  name: fuzzer # must be unique within the namespace
  labels: # used to organize&categorize; match selectors of controllers/services
    app: fuzzer
spec: # specification of the desired behavior of the Deployment
  selector: # label selector for the pods 
    matchLabels:
      app: fuzzer 
  replicas: 1 # number of desired pods; # of desired fuzzers we want to start?
  template: # describes the pods that will be created 
    metadata:
      labels:
        app: fuzzer
    spec: 
      containers:
        - name: fuzzer
          image: dockerized_fuzzer
          volumeMounts:
            - name: postgres-storage
              mountPath: ?
      volumes: 
        - name: postgres-storage
          persistentVolumeClaim: 
            claimName: postgres-claim
---
# PANDA
apiVersion: v1
kind: Deployment
metadata: 
  name: panda
  labels:
    app: panda
spec:
  selector:
    matchLabels:
      app: panda
  replicas: 1 
  template: 
    metadata:
      labels:
        app: panda
    spec: 
      containers:
        - name: panda
          image: dockerized_panda
          volumeMounts:
            - name: postgres-storage
              mountPath: ?
      volumes: 
        - name: postgres-storage
          persistentVolumeClaim: 
            claimName: postgres-claim


---
# FUZZING MANAGER 
apiVersion: batch/v1beta1 # group/version
kind: CronJob
metadata:
  name: fuzzing-manager
spec:
  schedule: "*/1 * * * *" # Cron format string  
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: fuzzing-manager
              image: dockerized_fuzzing_manager
              # args: 
              # - <any_args>
          restartPolicy: OnFailure

---
# DATABASE
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres
spec: 
  storageClassName: database
  capacity: 
    storage: 10Gi
  accessModes:
    - ReadWriteMany

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  name: postgres-claim
spec:
  storageClassName: database
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports: 
    - port: 5432
  selector:
    app: postgres

---
# FILESYSTEM
apiVersion: v1
kind: PersistentVolume
metadata:
  name: filesystem
spec:
  storageClassName: input
  capacity: 
    storage: 10Gi # Size of the volume 
  accesModes:
    - ReadWriteMany # type of access;  volume can be mounted read/write by many nodes
  hostPath:
    path: "/mnt/data" 

---
apiVersion: v1
kind: PersistenVolumeClaim
metadata:
  name: filesystem-claim
spec:
  storageClassName: input
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata: 
  name: filesystem
spec:
  ports:
    - port: 3306
  selector:
    app: filesystem
