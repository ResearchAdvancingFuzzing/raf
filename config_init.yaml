# This file will need to use a config file for the port that the service listens on

# make sure we do a helm install stable/postgresql BEFORE any of this since
# the setup requires that we have the postgres database already running 

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: job-create
  namespace: default
rules: 
- apiGroups: ["", "apps", "batch"]  
  resources: ["configmaps", "persistentvolumeclaims", "pods", "services", "secrets", "deployments", "jobs", "cronjobs"] # what resources this Cluster Role applies to 
  verbs: ["list", "get", "watch", "create", "update", "delete"] # what actions it can perform (right now just list things) 

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: create-jobs
subjects:  # who this applies to: all serviceaccounts that are default (which is basically everything)
- kind: ServiceAccount
  name: default # default:default
  #apiGroup: rbac.authorization.k8s.io
  namespace: default
roleRef: # what role they are getting  
  kind: Role 
  name: job-create
  apiGroup: rbac.authorization.k8s.io

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: dir-config
data:
  TARGET_DIR: /target
  CORPUS_DIR: /seed-corpus
  SPITFIRE: /spitfire
  INPUTS_DIR: /inputs
  REPLAY_DIR: /replay
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-pv 
spec: 
  #storageClassName: manual # bound by storage class name?
  capacity: 
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath: 
    path: "/mnt/data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  name: seed-corpus-pv-claim
spec:
  #storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  name: replay-pv-claim
spec:
  #storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  name: spitfire-pv-claim
spec:
  #storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  name: target-pv-claim
spec:
  #storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: inputs-pv-claim
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  name: target-instr-pv-claim
spec:
  #storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
kind: Job 
apiVersion: batch/v1
metadata: 
  name: init
spec:
  template:
    metadata:
      name: init
    spec: 
      containers:
        - name: init
          command:  ["python3.6"] #["./infinite"] #python3.6"]
          args: ["init.py"]
          image: init:v1
          volumeMounts:
            - name: target-pv-storage
              mountPath: "/target"
            - name: seed-corpus-pv-storage
              mountPath: "/seed-corpus"
            - name: spitfire-pv-storage
              mountPath: "/spitfire"
            - name: target-instr-pv-storage
              mountPath: "/target-instr"
          envFrom: 
            - configMapRef: 
                name: dir-config 
      initContainers: 
        - name: get-target
          image: target:xmllint #v1 #hpreslier/target:v1
          volumeMounts:
            - name: target-pv-storage
              mountPath: "/target"
            - name: target-instr-pv-storage
              mountPath: "/target-instr"
        - name: get-seed-corpus
          image: seed-corpus:v1
          volumeMounts:
            - name: seed-corpus-pv-storage
              mountPath: "/seed-corpus"
        - name: get-spitfire
          image: spitfire:v1
          volumeMounts:
            - name: spitfire-pv-storage
              mountPath: "/spitfire"
      volumes: # Pods access storage by using the claim as a volume. `
        - name: target-pv-storage
          persistentVolumeClaim:
            claimName: target-pv-claim 
        - name: target-instr-pv-storage
          persistentVolumeClaim:
            claimName: target-instr-pv-claim
        - name: seed-corpus-pv-storage
          persistentVolumeClaim:
            claimName: seed-corpus-pv-claim 
        - name: spitfire-pv-storage
          persistentVolumeClaim:
            claimName: spitfire-pv-claim
      restartPolicy: Never # OnFailure


