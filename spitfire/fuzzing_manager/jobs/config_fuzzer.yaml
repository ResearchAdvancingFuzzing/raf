kind: Job 
apiVersion: batch/v1
metadata: 
  name: fuzz
  labels:
    tier: backend
    job: fuzzer
spec:
  template:
    metadata:
      name: fuzz
    spec: 
      containers:
        - name: fuzz
          image: fuzz:v1
          command: ["./infinite"] 
          args: [""]
          volumeMounts:
            - name: target-instr-pv-storage
              mountPath: "/target"
            - name: gtfo-storage
              mountPath: "/gtfo-source"
            - name: seed-corpus-pv-storage
              mountPath: "/seed-corpus"
            - name: spitfire-pv-storage
              mountPath: "/spitfire"
            - name: inputs-pv-storage
              mountPath: "/inputs"
          env: 
            - name: WORK_DIR
              value: /fuzz_data
            - name: GTFO_DIR
              value: /gtfo-source
          envFrom: 
            - configMapRef: 
                name: dir-config
      initContainers: 
        - name: get-gtfo-source
          image: gtfo-source:v1
          volumeMounts: 
            - name: gtfo-storage
              mountPath: "/gtfo-source"
      volumes: # Pods access storage by using the claim as a volume. `
        - name: target-instr-pv-storage
          persistentVolumeClaim:
            claimName: target-instr-pv-claim 
        - name: gtfo-storage
          emptyDir: {}
        - name: seed-corpus-pv-storage
          persistentVolumeClaim:
            claimName: seed-corpus-pv-claim 
        - name: spitfire-pv-storage
          persistentVolumeClaim:
            claimName: spitfire-pv-claim
        - name: inputs-pv-storage
          persistentVolumeClaim:
            claimName: inputs-pv-claim
      restartPolicy: OnFailure

